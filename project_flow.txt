Blog
===

Features
=========
-User(reader,writer,admin)
-Posts
 -category

Posts
=====
-View Posts => reader [no auth]
-Create Posts => writer [auth]
-Public posts => admin [auth] (public, reject)


User Journey
============
Reader => Can view all posts
       => detail view
       => filter by category

writer => Register
       => Login
       => by own posts (public, reject)
       => create, edit, delete

Juu => Register
       => Login
       => Profile *
       => by own posts (public, reject)
       => create, edit, delete

Admin   => Login
        => all posts <- writers' created posts
        => detail view
        => public
        => reject (reason)

Mg Mg   => Login
        => all posts <- writers' created posts
        => detail view
        => public
        => reject (reason)

category [hardcode]
 -create, retrieve, update, delete

1. DB create
 - categories
  - id [PK, AI]
  - name [varchar]

 - users
  - id [PK, AI]
  - name [varchar]
  - email [varchar, unique]
  - password [varchar] <= hash
  - role (writer, admin) [varchar]

 - posts
  - id [PK, AI]
  - title [varchar]
  - content [text]
  - author_id (FK)
  - category_id (FK)
  - status (created, published, rejected) ->varchar
  - published_at [timestamp, NULL]
  -created_at [timestamp]

2. Design (Front Side)
 - Reader
  - All blogs posts (Home)
  - Detail Post
 - Writer
  - Register / Login
  - CRUD (Create, Retrieve, Update, Delete) - Blog Posts

3. Design (Back Side)
 - Admin
  - CRUD (Categories)
  - Post List
  - Post detail




